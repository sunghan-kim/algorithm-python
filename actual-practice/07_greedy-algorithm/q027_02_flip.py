# 문제명 : 뒤집기
# url : https://www.acmicpc.net/problem/1439

# 해설 (1)

# 문제 단순화
#  - 0001100 -> 010 으로 볼 수 있다.
#  - 여기서 0->1, 1->0 이 얼만큼 발생하는 지 보면 된다.

# 규칙 찾기
#  - 각 문자열의 뒤집기 필요 횟수
#   - 0 : 0
#   - 1 : 0
#   - 01 : 1
#   - 10 : 1
#   - 101 : 1
#   - 010 : 1
#   - 1010 : 2
#   - 10101 : 2
#   - 101010 : 3

# 1에서 0으로 또는 0에서 1로 바뀌는 구간이 몇 번 있었는 지 세면 된다.

#  - 각 문자열의 숫자가 바뀌는 횟수
#   - 0 : 0
#   - 1 : 0
#   - 01 : 1
#   - 10 : 1
#   - 101 : 2
#   - 010 : 2
#   - 1010 : 3
#   - 10101 : 4
#   - 101010 : 5

# 따라서 다음과 같은 식으로 답을 구할 수 있다.
#  - 뒤집기 필요 횟수 = (숫자가 바뀌는 횟수 + 1) // 2

S, tot = input(), 0
for i in range(1, len(S)):
    if S[i] != S[i-1]:
        tot += 1

print((tot+1)//2)